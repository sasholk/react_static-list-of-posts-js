{"version":3,"sources":["api/index.js","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["posts","postsFromServer","map","post","user","userId","usersFromServer","find","id","comments","postId","commentsFromServer","filter","comment","CommentInfo","name","email","body","className","href","CommentList","UserInfo","PostInfo","title","length","PostList","App","ReactDOM","render","document","getElementById"],"mappings":"q08IAcO,IAAMA,EAAQC,EAAgBC,KAAI,SAAAC,GAAI,kCACxCA,GADwC,IAE3CC,MAP0BC,EAORF,EAAKE,OANhBC,EAAgBC,MAAK,SAAAH,GAAI,OAAIA,EAAKI,KAAOH,MAC3C,MAMLI,UAb8BC,EAaJP,EAAKK,GAZxBG,EAAmBC,QAAO,SAAAC,GAAO,OAAIA,EAAQH,SAAWA,MAC1D,QAFA,IAAyBA,EAKJL,K,qBCTfS,EAAc,SAAC,GAAiB,IAAfD,EAAc,EAAdA,QAE1BE,EAGEF,EAHFE,KACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,KAGF,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCpBIG,EAAc,SAAC,GAAD,IAAGX,EAAH,EAAGA,SAAH,OACzB,qBAAKS,UAAU,cAAf,SACGT,EAASP,KAAI,SAAAW,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQL,UCJrCa,G,MAAW,SAAC,GAAc,IAAZjB,EAAW,EAAXA,KAEvBY,EAEEZ,EAFFY,MACAD,EACEX,EADFW,KAGF,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCNMO,EAAW,SAAC,GAAc,IAAZnB,EAAW,EAAXA,KAEvBoB,EAIEpB,EAJFoB,MACAnB,EAGED,EAHFC,KACAa,EAEEd,EAFFc,KACAR,EACEN,EADFM,SAGF,OACE,sBAAKS,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGK,IAGH,4BACG,iBAGH,cAAC,EAAD,CAAUnB,KAAMA,OAGlB,mBAAGc,UAAU,iBAAb,SACGD,IAGDR,EAASe,OAGT,cAAC,EAAD,CAAaf,SAAUA,IAFvB,mBAAG,UAAQ,oBAAX,iCC7BKgB,EAAW,SAAC,GAAD,IAAGzB,EAAH,EAAGA,MAAH,OACtB,qBAAKkB,UAAU,WAAf,SACGlB,EAAME,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKK,UCDbkB,EAAM,kBACjB,0BAASR,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CACElB,MAAOA,QCLb2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9fbd6db3.chunk.js","sourcesContent":["import postsFromServer from './posts.json';\nimport commentsFromServer from './comments.json';\nimport usersFromServer from './users.json';\n\nexport function getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n    || null;\n}\n\nexport function getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n","export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    user,\n    body,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        <p>\n          {' Posted by  '}\n        </p>\n\n        <UserInfo user={user} />\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      {!comments.length ? (\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      ) : (\n        <CommentList comments={comments} />\n      )}\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo key={post.id} post={post} />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { posts } from './api';\nimport { PostList } from './components/PostList';\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList\n      posts={posts}\n    />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}